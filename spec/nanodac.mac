def nanodac_setup '{
  if($# < 1)
  {
    print "Usage: $0 <TANGO_URL>\n"
    exit
  }
  global NANODAC_SERVER_URL
  NANODAC_SERVER_URL = "$1"

  global NANODAC_MOT[]
  cdef("user_getangles", "_nanodac_getangles\n", "nanodacmot")
  cdef("user_checkall", "_nanodac_moveall\n", "nanodacmot")
  cdef("user_motorsrun", "_nanodac_motorsrun\n", "nanodacmot")

  global NANODAC_CNT[]
  cdef("user_getcounts", "_nanodac_getcounts\n", "nanodaccnt", 0x10)
}'

def nanodac_unsetup '{
  cdef("", "", "nanodacmot", "delete")
  cdef("", "", "nanodaccnt", "delete")
}'

def nanodac_menu '{
  local option nl i
  option = 1
  while((option != "quit") && (option != "q"))
  {
    tty_cntl("cl")
    nl = 0
    tty_move(0, nl++, "Nanodac Status:")
    nl++
    tty_cntl("so")
    tty_cntl("md")
    tty_move(0, nl++, "Channels info:")
    tty_move(9, nl, "PV")
    tty_move(16, nl, "PV2")
    tty_move(22, nl, "Type")
    tty_move(28, nl++, "Lin type")
    tty_cntl("se")
    tty_cntl("me")


    for(i = 1; i < 5;++i)
    {
      local val
      tty_move(4, nl, i)
      val = tango_get(NANODAC_SERVER_URL,sprintf("c%d_pv",i))
      tty_move(9, nl,sprintf("%.2f",val))
      val = tango_get(NANODAC_SERVER_URL,sprintf("c%d_pv2",i))
      tty_move(16, nl,sprintf("%.1f",val))
      val = tango_get(NANODAC_SERVER_URL,sprintf("c%d_type",i))
      tty_move(22, nl,val)
      val = tango_get(NANODAC_SERVER_URL,sprintf("c%d_lintype",i))
      tty_move(28, nl++,val)
    }
   ++nl
    tty_cntl("so")
    tty_cntl("md")
    tty_move(0, nl++, "Loop:")
    tty_move(9, nl, "PV")
    tty_move(16, nl, "Slope")
    tty_move(22, nl, "Targetsp")
    tty_move(31, nl, "Workingsp")
    tty_move(41, nl, "P")
    tty_move(48, nl, "I")
    tty_move(55, nl++, "D")
    tty_cntl("se")
    tty_cntl("me")

 for(i = 1; i < 3;++i)
    {
      local val
      tty_move(4, nl, i)
      val = tango_get(NANODAC_SERVER_URL,sprintf("ramp%d_pv",i))
      tty_move(9, nl,sprintf("%.2f",val))
      val = tango_get(NANODAC_SERVER_URL,sprintf("ramp%d_slope",i))
      tty_move(16, nl,sprintf("%.2f",val * 60))
      val = tango_get(NANODAC_SERVER_URL,sprintf("ramp%d_targetsp",i))
      tty_move(22, nl,sprintf("%.2f",val))
      val = tango_get(NANODAC_SERVER_URL,sprintf("ramp%d_workingsp",i))
      tty_move(31, nl,sprintf("%.2f",val))
      val = tango_get(NANODAC_SERVER_URL,sprintf("ramp%d_pid_proportionalband",i))
      tty_move(41, nl,sprintf("%.1f",val))
      val = tango_get(NANODAC_SERVER_URL,sprintf("ramp%d_pid_integraltime",i))
      tty_move(48, nl,sprintf("%d",val))
      val = tango_get(NANODAC_SERVER_URL,sprintf("ramp%d_pid_derivativetime",i))
      tty_move(55, nl++,sprintf("%d",val))
    } 
   ++nl
 
    tty_move(0, nl++, "s) Change slope")
    tty_move(0, nl++, "t) Change target set point")

    tty_move(0, nl++, "p) Change the proportional band")
    tty_move(0, nl++, "i) Change the integraltime")
    tty_move(0, nl++, "d) Change the derivativetime")

    option= getval("\n\n\tSwitch outputs  ---> ", "[q]uit")

    if((option != "quit") && (option != "q"))
    {
      if(option == "s")
      {
        local loop_id
        loop_id = getval("\nWich loop?","1")
        option = getval("\nEnter the slope (deg/min):","1.")
        option /= 60.
        tango_put(NANODAC_SERVER_URL,sprintf("ramp%d_slope",loop_id),option)
      }
      else if(option == "t")
      {
        local loop_id
        loop_id = getval("\nWich loop?","1")
        option = getval("\nEnter the target set point:",tango_get(NANODAC_SERVER_URL,sprintf("ramp%d_pv",loop_id)))
        tango_put(NANODAC_SERVER_URL,sprintf("ramp%d_targetsp",loop_id),option)
      }
      else if(option == "p")
      {
        local loop_id
        loop_id = getval("\nWich loop?","1")
        option = getval("\nEnter the proportional band:",tango_get(NANODAC_SERVER_URL,sprintf("ramp%d_pid_proportionalband",loop_id)))
        tango_put(NANODAC_SERVER_URL,sprintf("ramp%d_pid_proportionalband",loop_id),option)
      }
      else if(option == "i")
      {
        local loop_id
        loop_id = getval("\nWich loop?","1")
        option = getval("\nEnter the integraltime:",tango_get(NANODAC_SERVER_URL,sprintf("ramp%d_pid_integraltime",loop_id)))
        tango_put(NANODAC_SERVER_URL,sprintf("ramp%d_pid_integraltime",loop_id),option)
      }
      else if(option == "d")
      {
        local loop_id
        loop_id = getval("\nWich loop?","1")
        option = getval("\nEnter the derivativetime:",tango_get(NANODAC_SERVER_URL,sprintf("ramp%d_pid_derivativetime",loop_id)))
        tango_put(NANODAC_SERVER_URL,sprintf("ramp%d_pid_derivativetime",loop_id),option)
      }
    }
  }    
}'

def nanodac_ramp_stop '{
  tang_io(NANODAC_SERVER_URL,"stop")
}'

def nanodac_motsetup '{
  if($# != 5)
  {
    print "Usage: $0 [<tango_rattr> <tango_wattr> <mot_mne> <wait movement> <dead band>]" 
  }
  local motmne wtango_rattr tango_wattr ait_flag
  motmne = "$3"
  if(motor_num(motmne) == -1) 
    printf("Invalid motor <%s>\n", motmne)
  else
  {
    tango_rattr = "$1"
    tango_wattr = "$2"
    wait_flag = "$4"
    dead_band = "$5"

    list_add(NANODAC_MOT,motmne)
    NANODAC_MOT[motmne]["tango_rattr"] = tango_rattr
    NANODAC_MOT[motmne]["tango_wattr"] = tango_wattr
    NANODAC_MOT[motmne]["wait_flag"] = wait_flag
    NANODAC_MOT[motmne]["dead_band"] = dead_band
  }
}'

def nanodac_motunsetup '{
  local motmne
  if($# == 1)
  {
    motmne = "$1"
    list_remove(NANODAC_MOT,motmne)
  }
  else
  {
    list_init NANODAC_MOT
  }
}'

def _nanodac_getangles '{
  local imot mmne mnum value

  for (imot= 1; imot<=list_n(NANODAC_MOT); ++imot) {
    mmne= list_item(NANODAC_MOT, imot)
    mnum= motor_num(mmne)
    if ((mnum!=-1)&&(!motor_par(mnum, "disable"))) {
      value= tango_get(NANODAC_SERVER_URL,NANODAC_MOT[mmne]["tango_rattr"])
      NANODAC_MOT[mmne]["old"]= value
      NANODAC_MOT[mmne]["err"]= (value == -1)

      A[mnum]= value
    }
  }
}'

def _nanodac_moveall '{
  local imot mmne mnum

  for (imot= 1; imot<=list_n(NANODAC_MOT); ++imot) {
    mmne= list_item(NANODAC_MOT, imot)
    mnum= motor_num(mmne)
    if ((mnum!=-1)&&(!motor_par(mnum, "disable"))) {
      if ((!NANODAC_MOT[mmne]["err"])&&(A[mnum]!=NANODAC_MOT[mmne]["old"])) {
        tango_put(NANODAC_SERVER_URL,NANODAC_MOT[mmne]["tango_wattr"],A[mnum])
      }
    }
  }
}'

def _nanodac_motorsrun '{
for (imot= 1; imot<=list_n(NANODAC_MOT); ++imot) {
    mmne= list_item(NANODAC_MOT, imot)
    mnum= motor_num(mmne)
    if ((mnum!=-1)&&(!motor_par(mnum, "disable"))) {
      if (NANODAC_MOT[mmne]["wait_flag"]) {
        local read_pos writ_pos
        read_pos = tango_get(NANODAC_SERVER_URL,NANODAC_MOT[mmne]["tango_rattr"])
        writ_pos = tango_get(NANODAC_SERVER_URL,NANODAC_MOT[mmne]["tango_wattr"])
        if(fabs(read_pos - writ_pos) > NANODAC_MOT[mmne]["dead_band"])
          return 1
      }
  }
}
}'

def nanodac_cntsetup '{
  if($# != 2)
  {
    print "Usage: $0 [<tango_attr> <cnt_mne>]"
  }
  else
  {
    local cntmne tango_attr
    cntmne = "$2"
    tango_attr = "$1"
    if(cnt_num(cntmne) == -1)
      printf("Invalid counter <%s>\n", cntmne)
    else
    {
      list_add(NANODAC_CNT,cntmne)
      NANODAC_CNT[cntmne]["tango_attr"] = tango_attr
    } 
  }
}'

def nanodac_cntunsetup '{
  local cmne cnum icnt
  if($# == 1)
  {
    cmne = $1
    cnum = cnt_num(cmne)
    list_remove(NANODAC_CNT,cmne) 
  }
  else
  {
    list_init NANODAC_CNT
  }
}'

def _nanodac_getcounts'{
  local icnt cmne cnum
  for (icnt=1; icnt<=list_n(NANODAC_CNT); icnt++) {
    cmne= list_item(NANODAC_CNT, icnt)
    cnum= cnt_num(cmne)
    if ((cnum!=-1)&&(!counter_par(cnum, "disable"))) {
        S[cnum]= tango_get(NANODAC_SERVER_URL,NANODAC_CNT[cmne]["tango_attr"])
      } else {
        S[cnum]= -1
      }
    }
}'

