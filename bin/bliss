#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# This file is part of the bliss project
#
# Copyright (c) 2016 Beamline Control Unit, ESRF
# Distributed under the GNU LGPLv3. See LICENSE for more info.

"""
Usage: bliss [(-c FILE |--config-file=FILE)] [(-s NAME | --session=NAME)]  
       bliss (-h | --help)

Options:

    -c FILE, --config-file=FILE  Full path to .yml configuration file.
    -s NAME, --session=NAME      Session name (from configuration file).
    -h, --help                   Show this screen.
"""
import sys
import os
import docopt
from ptpython import repl
from ptpython.eventloop import _create_eventloop
from gevent import select
from bliss.shell import initialize

def gevent_inputhook(inputhook_context):
    r, _, _ = select.select([inputhook_context.fileno()],[],[])

def create_eventloop():
    return _create_eventloop(gevent_inputhook)

def main():
    try:
        # Parse arguments, use file docstring as a parameter definition
        arguments = docopt.docopt(__doc__)

        config_file = os.path.expanduser(arguments["--config-file"]) if arguments["--config-file"] else None
        session_name = arguments.get("--session")
    except docopt.DocoptExit as e:
        print e.message
    else:
        repl.create_eventloop = create_eventloop

        user_ns, session_id, _ = initialize(config_file, session_name)

        if config_file:
            history_filename = ".%s_%s_history" % (os.path.basename(sys.argv[0]), session_id)
        else:
            history_filename = ".%s_history" % os.path.basename(sys.argv[0])
        history_filename = os.path.join(os.environ["HOME"], history_filename)

        repl.embed(user_ns, None, vi_mode=False, history_filename=history_filename)


if __name__ == '__main__':
    main()
