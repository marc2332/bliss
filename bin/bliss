#!/usr/bin/env python
"""
Usage: bliss --config-file=FILE [--session=NAME]  
       bliss (-h | --help)

Options:

    --config-file=FILE  Full path to .yml configuration file.
    --session=NAME      Session name (from configuration file).
    -h --help           Show this screen.
"""
import sys
import os
import docopt
from ptpython import repl
from ptpython.eventloop import _create_eventloop
from gevent import select
import bliss
from bliss.config import static
from bliss.shell import set_shell_config_file, read_config

def gevent_inputhook(inputhook_context):
    r, _, _ = select.select([inputhook_context.fileno()],[],[])

def create_eventloop():
    return _create_eventloop(gevent_inputhook)

if __name__ == '__main__':
    try:
        # Parse arguments, use file docstring as a parameter definition
        arguments = docopt.docopt(__doc__)

        config_file = os.path.expanduser(arguments["--config-file"])
        session_name = arguments.get("--session")
    except docopt.DocoptExit as e:
        print e.message
    else:
        set_shell_config_file(config_file)
       
        SETUP, SYNOPTIC, default_session = read_config()
        session_id = session_name or default_session 

        setup_file = SETUP.get(session_id, {}).get("file")
        config_objects_names = SETUP.get(session_id, {}).get("config_objects")

        repl.create_eventloop = create_eventloop

        user_ns = {"config": static.get_config() }

        repl.embed(user_ns, None, vi_mode=False, history_filename=os.path.join(os.environ["HOME"], ".%s_history" % os.path.basename(sys.argv[0])))
